#include <iostream>
#include <vector>
#include <cctype>
using namespace std;
//простейший пример операции над векторами
int main()
{
	vector<char> v(10);
	vector<char>::iterator p;
	int i;

	p = v.begin();
	i = 0;
	while(p != v.end()){
		*p = i + 'a';
		p++;
		i++;
	}

	cout << "Исходное содержимое: \n";
	p = v.begin();
	i = 0;
	while(p != v.end()){
		cout << *p << " ";
		p++;
	}
	cout << "\n\n";

	p = v.begin();
	i = 0;
	while(p != v.end()){
		*p = toupper(*p);
		p++;
	}

	cout << "Модифицированное содержимое: \n";
	p = v.begin();
	i = 0;
	while(p != v.end()){
		cout << *p << " ";
		p++;
	}
	cout << endl;

	return 0;
}

/*Обратите внимание на то, как объявлен интератор р, тип iterator определен в
контейнерном классе. Следовательно, чтобы получить итератор для элементов
конкретного контейнера, необходимо использовать объявление,
аналогичное показанному в примере - просто указать имя
контейнера и спецификатор iterator. В данной программе итератор р установлен
в начало вектора. Для этого используется функция begin().
Эта процедура аналогична применению указателей для доступа к элементам массива. Для
того, чтобы распознать конец вектора, вызывается функция end(). Эта функция возвращает
итератор, установленный на элемент, следующий за последним элементов вектора. таким образом,
если итератор р равен значению v.end(), значит, обнаружен коней вектора.*/
